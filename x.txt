<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Geocoding service</title>
    <style>
      html, body, #map-canvas { height: 100%; min-height: 600px; min-width: 700px; margin: 0px; padding: 0px }
      #map-canvas { height: 50%; }
      #panel { position: absolute; top: 5px; left: 50%; margin-left: -350px; z-index: 5; background-color: #fff; padding: 5px; border: 1px solid #999; }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=visualization"></script>
</head>
<body>
    <div id="panel">
      <label>Origin
          <input id="origin" type="text" value="">
      </label>
      <label>Destination
          <input id="destination" type="text" value="">
      </label>
      <input type="button" value="GetDirections" onclick="calcRoute()">
    </div>
	 
	<div id="control_panel" style="float:right;width:30%;text-align:left;padding-top:5px">
	  <div id="routes">
      <input id = "r1" type="button" value="Route 1" onclick="displayRoute1()">
	  <input id = "r2" type="button" value="Route 2" onclick="displayRoute2()">
	  <input id = "r3" type="button" value="Route 3" onclick="displayRoute3()">
    </div>
	<div id="total"></div>
	</div>
    <div id="map-canvas"></div>
     <div id="vertex-container">
        <label>Points</label>
        <ul id="vertex">
        </ul>
    </div>
    <script type="text/javascript" src="R1.js"></script>
	<script type="text/javascript">
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        var map;
		var directionsRequest;
		var col = ["red","orange","yellow"];
		var heatmapDatas,heatmapData= [];
		
        function initialize() {
            directionsDisplay = new google.maps.DirectionsRenderer();

            var mapOptions = {
                zoom: 7,
                center: new google.maps.LatLng(48.85727000, 2.35238),
				mapTypeId: 'satellite'
            };
            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
            directionsDisplay.setMap(map);
        }

        function calcRoute() {
            var start = document.getElementById('origin').value;
            var end = document.getElementById('destination').value;
            directionsRequest = {
                origin: start,
                destination: end,
				provideRouteAlternatives : true,
                travelMode: google.maps.TravelMode.DRIVING,
				unitSystem: google.maps.UnitSystem.METRIC
            };
			
		}
		
		function displayRoute1() {
			
			showRoute(0,6,114);
			drawHeatMap(heatmapDatas1);
		}

		function displayRoute2(){
			
			showRoute(1,18,257);
			drawHeatMap(heatmapDatas3);
		}
		
		function displayRoute3(){
			
		showRoute(2,11,135);
		drawHeatMap(heatmapDatas2);
		}
		
		


		function showRoute(i,accpts,accdts){
			
			initialize();
			var ul = document.getElementById("vertex");
			while (ul.firstChild) {
				ul.removeChild(ul.firstChild);
			}
			directionsService.route(directionsRequest,function (response, status) {
			if (status == google.maps.DirectionsStatus.OK) {					
				new google.maps.DirectionsRenderer({
				map: map,
				directions: response,
				routeIndex: i,
				polylineOptions: {strokeColor:col[i]}
			});	
			
			computeTotalDistance(response,i,accpts,accdts);
			
			var points = response.routes[i].overview_path;
			
			for (var j = 0; j < points.length; j++) {
				var li = document.createElement('li');
				li.innerHTML = getLiText(points[j]);
				ul.appendChild(li);
			}
			} else {
				  //console.log("Directions query failed: " + status);
			}
			});
			
		}
		
		function drawHeatMap(hmd){	
				
			for (var k = 0; k < hmd.length; k++) {
		
			  var weightedLoc = {
				location: hmd[k],
				//weight: Math.pow(2, magnitude[i])
			  };
			  heatmapData.push(weightedLoc);
			}
			
			heatmap = new google.maps.visualization.HeatmapLayer({
			  data: heatmapData,
			  map: map
			});
			
			heatmap.setMap(map);
			
			heatmapDatas,heatmapData=[];
		}
		
		function getLiText(point) {
            var lat = point.lat(),
                lng = point.lng();
            return lat + "," + lng;
        }
		
		function computeTotalDistance(result,h,accpts,accdnts) {
		  var totalDist = 0;
		  var totalTime = 0;
		  var myroute = result.routes[h];
		  for (i = 0; i < myroute.legs.length; i++) {
			totalDist += myroute.legs[i].distance.value;
			totalTime += myroute.legs[i].duration.value;
		  }
		  totalDist = totalDist / 1000.
		  document.getElementById("total").innerHTML = "Total Distance is: " + (totalDist/1.6).toFixed(2) + " miles<br>Total time is: " + (totalTime / 60).toFixed(2) + " minutes<br>No. of Accident points: " + accpts + "<br>Total No. of Accidents: " + accdnts;
		}
        
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
</body>
</html>